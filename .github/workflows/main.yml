name: Playwright-Tests
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:

  setup-and-run-tests:
    # setup and run the tests in parallel machines, with each machine uploading its own results to artifacts
    # artifacts are shared between jobs and machines
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --shard ${{ matrix.shard }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: merged-reports-as-blob
        path: blob-report
        retention-days: 14


  merge-reports-and-upload:
    if: always()
    needs: [setup-and-run-tests]
    runs-on: ubuntu-latest

    outputs:
        timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:

    - name: Set a timestamp
      id: timestampid
      run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT" 

    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v4
      with:
        name: merged-reports-as-blob
        path: downloaded-merged-reports-as-blob

    - name: Merge the blobs into one single HTML Report
      run: npx playwright merge-reports --reporter html ./downloaded-merged-reports-as-blob

    - name: /[OPTIONAL] Upload full html report to artifacts for history
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ steps.timestampid.outputs.timestamp }}
        path: playwright-report
        retention-days: 14

    - name: Push the new files to github pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        destination_dir: ${{ steps.timestampid.outputs.timestamp }} 
    - name: Write URL in summary
      run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/playwright-example-with-typescript/${{ steps.timestampid.outputs.timestamp }}/" >> $GITHUB_STEP_SUMMARY
